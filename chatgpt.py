import openai
from dotenv import load_dotenv
import os

# Assistant Class for ChatGPT API
# https://docs.python.org/3/tutorial/classes.html

class Assistant():

    #Initialisation
    def __init__(self):
        self.api_key = None
        # The system message helps set the behavior of the assistant.
        self.system_message = "You are a helpful assistant."
        # The user messages help instruct the assistant. They can be generated by the end users of an application, or set by a developer as an instruction.
        self.user_message = "Who won the world series in 2020?"
        # The assistant messages help store prior responses. They can also be written by a developer to help give examples of desired behavior.
        self.assistant_message = "The Los Angeles Dodgers won the World Series in 2020."

    def get_api_key(self):
        load_dotenv()
        self.api_key = os.environ.get("api-key")
    
    def send_message(self, input_message):

        # Get API Key if it is not defined yet
        if not self.api_key:
            self.api_key = self.get_api_key()

        # Actual API call
        openai.api_key = self.api_key
        response = openai.ChatCompletion.create(
            model = "gpt-3.5-turbo",
            messages = [
                        {"role": "system", "content": self.system_message },
                        {"role": "user", "content": self.user_message },
                        {"role": "assistant", "content": self.assistant_message },
                        {"role": "user", "content": input_message }
                    ]
        )

        result = ''
        for choice in response.choices:
            result += choice.message.content

        return result